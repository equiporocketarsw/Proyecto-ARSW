#spring.datasource.hikari.connectionTimeout=20000
#spring.datasource.hikari.maximumPoolSize=5

spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.platform=postgres
#spring.datasource.jdbc-url=jdbc:postgresql://ec2-23-23-195-205.compute-1.amazonaws.com:5432/d3com3to3onqr2?sslmode=require
spring.datasource.url=jdbc:postgresql://ec2-23-21-115-109.compute-1.amazonaws.com:5432/d4532oegkjf33o?ssl=true&sslmode=require
spring.datasource.username=kmaeicbsmkisqf
spring.datasource.password=19721b9e5fbbcca0bf090b3282e3356b269ae8822baacd865628935bf48c54a9
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

spring.jpa.generate-ddl=true


# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update


# Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true